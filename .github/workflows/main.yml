name: Build Packages

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone build-tools repo
        run: |
          git clone https://github.com/aarchd/build-tools /tmp/build-tools

      - name: Run pkgmeta.sh gen
        run: /tmp/build-tools/pkgmeta.sh gen

      - name: Fetch build-metadata from meta branch
        run: |
          git fetch origin meta
          git show origin/meta:build-metadata > build-metadata

      - name: Get changed packages
        run: |
          pkgs=$(/tmp/build-tools/pkgmeta.sh check | tr '\n' ' ')
          echo "CHANGED_PKGS=$pkgs" >> "$GITHUB_ENV"

      - name: Pull rootfs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release download -R "aarchD/rootfs" -p "rootfs.tar.gz"
          mkdir -p /tmp/rootfs
          tar -xzf rootfs.tar.gz -C /tmp/rootfs

      - name: Update build-metadata
        if: env.CHANGED_PKGS != ''
        run: |
          /tmp/build-tools/pkgmeta.sh buildc
          mv build-metadata ../
          git switch meta
          mv ../build-metadata .
          git add build-metadata
          git commit --amend --no-edit
          git push origin meta --force

      - name: Build changed packages
        if: env.CHANGED_PKGS != ''
        run: |
          sudo apt-get update && sudo apt-get install systemd-container
          mkdir -p /tmp/pkgs
          sudo systemd-nspawn -D /tmp/rootfs --bind=$PWD:/mnt/PKGBUILDs \
          --bind=/tmp/build-tools:/mnt/build-tools \
          --bind=/tmp/pkgs:/mnt/pkgs \
          /bin/bash -c "/mnt/build-tools/buildpkg.sh $CHANGED_PKGS"

      - name: Sign Packages
        if: env.CHANGED_PKGS != ''
        env:
          GPG_TTY: $(tty)
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --import --batch
          echo "allow-preset-passphrase" > ~/.gnupg/gpg-agent.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "no-tty" >> ~/.gnupg/gpg.conf
          gpg-connect-agent reloadagent /bye
          KEYGRIP=$(gpg --list-secret-keys --with-keygrip --with-colons | awk -F: '/^grp/ {print $10; exit}')
          echo "$GPG_PASSPHRASE" | /usr/lib/gnupg/gpg-preset-passphrase --preset "$KEYGRIP"
          cd /tmp/pkgs
          for pkg in *.pkg.tar.zst; do
            gpg --detach-sign "$pkg"
          done

      - name: Push packages
        if: env.CHANGED_PKGS != ''
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git clone https://$PAT@github.com/aarch0/repo.git --depth=1
          cd repo && mkdir -p PKGS/

          for pkg in /tmp/pkgs/*.pkg.tar.zst; do
            base=$(basename "$pkg")
            prefix="${base%%-*}"
            find PKGS/ -type f -name "${prefix}-*.pkg.tar.zst" -exec rm -v {} +
          done

          cp /tmp/pkgs/* PKGS/
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A -v
          git commit -m "${GITHUB_SHA::7} - $CHANGED_PKGS"
          git push origin main
